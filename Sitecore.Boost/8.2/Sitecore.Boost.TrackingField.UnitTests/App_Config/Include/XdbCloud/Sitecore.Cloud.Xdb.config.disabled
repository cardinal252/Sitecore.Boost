<?xml version="1.0" encoding="utf-8" ?>
<!--

Important: You must specify a value for the Sitecore.Cloud.Xdb.DeploymentId setting before you start Sitecore for the first time after you
have configured Sitecore to connect to the xDB Cloud Edition.
 
Purpose: This include file contains configuration settings for connecting to the xDB Cloud Edition.
 
To enable this include file, rename it so that it has a ".config" extension.

 -->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <settings>
      <!--  DEPLOYMENT ID
            Identifies the xDB Cloud Edition instance that this Sitecore installation should connect to.
            This string must only contain letters and numbers (no whitespace).
            You must specify a value for this setting before you run Sitecore for the first time after you configure Sitecore to use a cloud xDB.
            Default value: "" (not connected to xDB Cloud Edition)
      -->
      <setting name="Sitecore.Cloud.Xdb.DeploymentId" value="" />

      <!-- DEPLOYMENT TYPE
           Allowed values are: 
           Prod
           NonProd
           
           Sitecore will not boot if this setting doesn't match what is retrieved from the xdb service.
           Running a production solution on a non-prod SLA will degrade your overall SLA.
           Running a non-production solution on a production data set will pollute the production data set.
      -->
      <setting name="Sitecore.Cloud.Xdb.DeploymentType" value="Prod" />

      <!-- DEPLOYMENT REGION
           Identifies the region for xDB Cloud that this Sitecore installation should attempt to provision in.
           Important: Before you run Sitecore for the first time, you must specify a value for the DeploymentRegion setting. 
           You can do this after you configure Sitecore to use xDB Cloud. Thereafter Sitecore will ignore the DeploymentRegion setting and automatically connect to the xDB Set that you specified. 
           For a list of supported regions, go to: https://doc.sitecore.net/cloud/81/xdb_cloud/configure_a_sitecore_xdb_cloud_connection.
           Default value: "" (must be specified before connecting to xDB Cloud for the first time)
      -->
      <setting name="Sitecore.Cloud.Xdb.DeploymentRegion" value="" />

      <!-- PATH ANALYZER - REMOTE CLIENT - IGNORE SSL CERTIFICATE ERRORS
                 If true, SSL certificate errors will be ignored when the client attempts to connect to the remote Path Analyzer services.
                 This is particularly useful for self-signed certificates or other certificates not signed by a recognized CA.
            -->
      <setting name="PathAnalyzer.Remote.IgnoreSslCertificateErrors" value="true" />

      <!-- PATH ANALYZER - REMOTE SERVICES - AUTHENTICATION - API KEY
            Specifies the key to use for HMAC authentication.
            IMPORTANT: do not use the default value, instead generate your own random key.
            This value must match the value specified in Sitecore.PathAnalyzer.Services.RemoteServer.config.
      -->
      <setting name="PathAnalyzer.Remote.Authentication.ApiKey" value="`%L$2I4quWUZULm^Y6%|R2dQP\vM';B5bT2H0|z\G\q8" />

      <!-- PATH ANALYZER - REMOTE SERVICES - AUTHENTICATION - AUTHORIZED CLIENT ID
            Specifies the unique application Id to use for HMAC authentication. This value should be unique to Path Analyzer.
            IMPORTANT: do not use the default value, instead generate your own random value.
            This value must be contained in the "/sitecore/pathAnalyzer/remoteServices/configuration/authorizedClients" list specified in Sitecore.PathAnalyzer.Services.RemoteServer.config.
      -->
      <setting name="PathAnalyzer.Remote.Authentication.AuthorizedClientId" value="c241da4e6249fe8cd384be1ca4865bff" />
    </settings>
    <httpTransportFactory type="Sitecore.Cloud.Xdb.CloudBasedTransportFactory, Sitecore.Cloud.Xdb" singleInstance="true"/>

    <reporting>
      <remote enabled="true">
        <proxyDataSource type="Sitecore.Analytics.Reporting.Datasources.Remote.RemoteReportDataSourceProxy, Sitecore.Analytics" />
        <paths>
          <Reporting>/~/v75/reporting/remotedatasourceproxy/</Reporting>
          <DefinitionDeployment>/~/v75/reporting/masterdata/datadefinitionservice/</DefinitionDeployment>
          <ReportingStorageManager>/~/v81/reporting/reportingstoragemanager/</ReportingStorageManager>
        </paths>
      </remote>
    </reporting>

    <marketingDefinitions>
      
      <deploymentManagerTargetRepository>remote</deploymentManagerTargetRepository>
      <sc.variable name="marketingDefinitions.deploymentManager.targetRepository">
        <patch:attribute name="value">remote</patch:attribute>
      </sc.variable>

      <!--Enable remote definition repositories-->
      <campaign>
        <repositories>
          <remote type="Sitecore.Analytics.Reporting.DefinitionData.Marketing.Remote.CampaignRemoteDefinitionRepository, Sitecore.Analytics" singleInstance="true">
            <param desc="httpTransport" ref="httpTransportFactory" />
            <param desc="handler">/~/v80/marketingdefinitions/remote/campaign/</param>
          </remote>
        </repositories>
      </campaign>

      <goal>
        <repositories>
          <remote type="Sitecore.Analytics.Reporting.DefinitionData.Marketing.Remote.GoalRemoteDefinitionRepository, Sitecore.Analytics" singleInstance="true">
            <param desc="httpTransport" ref="httpTransportFactory" />
            <param desc="handler">/~/v80/marketingdefinitions/remote/goal/</param>
          </remote>
        </repositories>
      </goal>

      <outcome>
        <repositories>
          <remote type="Sitecore.Analytics.Reporting.DefinitionData.Marketing.Remote.OutcomeRemoteDefinitionRepository, Sitecore.Analytics" singleInstance="true">
            <param desc="httpTransport" ref="httpTransportFactory" />
            <param desc="handler">/~/v80/marketingdefinitions/remote/outcome/</param>
          </remote>
        </repositories>
      </outcome>
      <!--End-->
      
      <asset>
        <repositories>
          <remote type="Sitecore.Marketing.Definitions.MarketingAssets.Data.Remote.MarketingAssetRemoteDefinitionRepository, Sitecore.Marketing.Definitions.MarketingAssets.Repositories" singleInstance="true">
            <param desc="httpTransport" ref="httpTransportFactory" />
            <param desc="handler">/~/v80/marketingdefinitions/remote/asset/</param>
          </remote>
        </repositories>
    </asset>     
    </marketingDefinitions>
	
	<taxonomy>
      <deployHandler>
        <patch:delete />
      </deployHandler>

      <deployHandler type="Sitecore.Analytics.Reporting.DefinitionData.Taxonomy.Deployment.HttpDeployHandler, Sitecore.Analytics" singleInstance="true">
        <param desc="httpTransport" ref="httpTransportFactory"/>
        <param desc="publishPath">/~/v80/publish/taxonomy/</param>
      </deployHandler>
    </taxonomy>

    <aggregation>
      <reportingStorageProviders>
        <primary>
          <patch:delete />
        </primary>
        <secondary.live>
          <patch:delete />
        </secondary.live>
        <secondary.history>
          <patch:delete />
        </secondary.history>
        <remote type="Sitecore.Analytics.Reporting.DefinitionData.RemoteWriteOnlyDefinitionsStorageProvider, Sitecore.Analytics" singleInstance="true" />
        <primary type="Sitecore.Analytics.Reporting.DefinitionData.RemoteWriteOnlyDefinitionsStorageProvider, Sitecore.Analytics" singleInstance="true" />
      </reportingStorageProviders>
    </aggregation>

    <hooks>
      <hook type="Sitecore.Cloud.Xdb.DisableAggregation, Sitecore.Cloud.Xdb" patch:after="hook[@type='Sitecore.Analytics.Aggregation.AggregationLoader, Sitecore.Analytics.Aggregation']"/>
      <hook type="Sitecore.Cloud.Xdb.DisableProcessing, Sitecore.Cloud.Xdb" patch:after="hook[@type='Sitecore.Analytics.Processing.ProcessingLoader, Sitecore.Analytics.Processing']"/>
      <hook type="Sitecore.Cloud.Xdb.DisableAutomation, Sitecore.Cloud.Xdb" patch:after="hook[@type='Sitecore.Analytics.Automation.Aggregation.SubsystemLoader, Sitecore.Analytics.Automation.Aggregation']"/>
      <hook type="Sitecore.Cloud.Xdb.DisablePathAnalyzerProcessing, Sitecore.Cloud.Xdb" patch:after="hook[@type='Sitecore.PathAnalyzer.Processing.SubsystemLoader, Sitecore.PathAnalyzer']"/>
      <hook type="Sitecore.Cloud.Xdb.DisableExperienceAnalyticsReduce, Sitecore.Cloud.Xdb" patch:after="hook[@type='Sitecore.ExperienceAnalytics.Reduce.SubSystemLoader, Sitecore.ExperienceAnalytics']"/>
    </hooks>
    
    <maintenanceService>
      <Services>
        <rdbCleanUpPrimary>
          <patch:delete />
        </rdbCleanUpPrimary>
      </Services>
    </maintenanceService>

    <pipelines>
      <initialize>
        <processor type="Sitecore.Cloud.Xdb.UpdateXdbConnectionStrings, Sitecore.Cloud.Xdb" patch:before="processor[@type='Sitecore.Pipelines.Loader.LoadHooks, Sitecore.Kernel']" />
      </initialize>
    </pipelines>
    
    <!-- Path Analyzer -->
    
    <!-- PATH ANALYZER
          Define or override the services used by the Path Analyzer remote client.
    -->
    <pathAnalyzer>
      <!-- DEFINITION SERVICE
            This service is used to perform CRUD operations against map definitions via a remote service endpoint.
            Patches the <definitionService /> node defined in Sitecore.PathAnalyzer.config.
      -->
      <definitionService patch:instead="definitionService" type="Sitecore.PathAnalyzer.Data.Remote.RemoteTreeDefinitionService, Sitecore.PathAnalyzer" />
      <!-- TREE PROVIDER
            This service is used to perform retrieval operations for maps via a remote service endpoint.
            Patches the <treeProvider /> node defined in Sitecore.PathAnalyzer.config.
      -->
      <treeProvider patch:instead="treeProvider" type="Sitecore.PathAnalyzer.Data.Remote.RemoteTreeProvider, Sitecore.PathAnalyzer" singleInstance="true" />
      <!-- WEB REQUEST FACTORY
            This service is used to create secure web requests for communicating with remote Path Analyzer services.
      -->
      <webRequestFactory type="Sitecore.PathAnalyzer.Data.Remote.RemoteWebRequestFactory, Sitecore.PathAnalyzer">
        <param desc="configuration" ref="pathAnalyzer/configuration" />
        <param desc="httpTransportFactory" ref="httpTransportFactory" />
      </webRequestFactory>
      <!-- REMOTE
            Defines settings related to remote server interaction.
      -->
      <remoteServices>
        <!-- ENDPOINTS
              Defines endpoints that are used for communicating with services on the remote reporting server.
        -->
        <endpoints>
          <treeDefinitionService>/sitecore/api/PathAnalyzer/RemoteTreeDefinition</treeDefinitionService>
          <treeService>/sitecore/api/PathAnalyzer/RemoteTree</treeService>
          <adminService>/sitecore/api/PathAnalyzer/RemoteAdmin</adminService>
        </endpoints>
      </remoteServices>
    </pathAnalyzer>
    <!-- -->
  </sitecore>
</configuration>